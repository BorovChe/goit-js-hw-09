{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAEzBD,SAASC,cAAc,mBAE/BG,iBAAiB,SAoC3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GAClBC,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,EAAAjB,GAASkB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEzEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBC,EAAAjB,GAASkB,OAAOG,QAAQ,sBAAoBN,QAAeC,MAAU,G,IA3CzEd,EAAWK,iBAAiB,SAK5B,SAA0BC,GAExB,OADAK,EAASS,OAAOd,EAAEe,cAAcC,OACzBX,C,IANTR,EAAUE,iBAAiB,SAU3B,SAAyBC,GAEvB,OADAiB,EAAOH,OAAOd,EAAEe,cAAcC,OACvBC,C,IAXTnB,EAAYC,iBAAiB,SAe7B,SAA2BC,GAEzB,OADAG,EAASH,EAAEe,cAAcC,MAClBb,C,IAfT,IAAIE,EAAS,EAMb,IAAIY,EAAO,EAMX,IAAId,EAAS,EAMb,SAASC,EAAcG,EAAUC,GAC/B,OAAO,IAAIU,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACYC,KAAKC,SAAW,GAEvCJ,EAAI,C,SAAEZ,E,MAAUC,IAEhBY,EAAI,C,SAAEb,E,MAAUC,GAAQ,GAErBH,GAAUY,EAAK,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nconst submitBtn = document.querySelector('[type=\"submit\"]');\n\nsubmitBtn.addEventListener('click', onMakeSubmit);\ndelayInput.addEventListener('input', onMakeInputDelay);\nstepInput.addEventListener('input', onMakeInputStep);\namountInput.addEventListener('input', onMakeInputAmount);\n\nlet delays = 0;\nfunction onMakeInputDelay(e) {\n  delays = Number(e.currentTarget.value);\n  return delays;\n}\n\nlet step = 0;\nfunction onMakeInputStep(e) {\n  step = Number(e.currentTarget.value);\n  return step;\n}\n\nlet amount = 0;\nfunction onMakeInputAmount(e) {\n  amount = e.currentTarget.value;\n  return amount;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    res({ position, delay })\n  } else {\n    rej({ position, delay })\n  }\n    }, delays += step);\n  })\n}\n\nfunction onMakeSubmit(e) {\n  e.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delays)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","addEventListener","e","preventDefault","i","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","$47d4ff9957288465$var$delays","then","position","delay","$parcel$interopDefault","Notify","success","catch","failure","Number","currentTarget","value","$47d4ff9957288465$var$step","Promise","res","rej","setTimeout","Math","random"],"version":3,"file":"03-promises.b588c514.js.map"}