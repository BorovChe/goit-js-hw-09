{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAEzBD,SAASC,cAAc,mBAE/BG,iBAAiB,SAoC3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,GAAKC,EAAQD,GAAK,EAChCE,EAAcF,EAAGG,GAClBC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,EAAAlB,GAASmB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,EAAAlB,GAASmB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,OA3CvEf,EAAWK,iBAAiB,SAK5B,SAA0BC,GAExB,OADAK,EAASW,OAAOhB,EAAEiB,cAAcC,M,IALlCrB,EAAUE,iBAAiB,SAU3B,SAAyBC,GAEvB,OADAmB,EAAOH,OAAOhB,EAAEiB,cAAcC,M,IAVhCpB,EAAYC,iBAAiB,SAe7B,SAA2BC,GAEzB,OADAG,EAASH,EAAEiB,cAAcC,K,IAd3B,IAAIb,EAAS,EAMb,IAAIc,EAAO,EAMX,IAAIhB,EAAS,EAMb,SAASC,EAAcI,EAAUC,GAC/B,OAAO,IAAIW,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACYC,KAAKC,SAAW,GAEvCJ,EAAI,CAAEb,WAAUC,UAEhBa,EAAI,CAAEd,WAAUC,S,GAEbJ,GAAUc,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\n\nconst submitBtn = document.querySelector('[type=\"submit\"]');\n\nsubmitBtn.addEventListener('click', onMakeSubmit);\ndelayInput.addEventListener('input', onMakeInputDelay);\nstepInput.addEventListener('input', onMakeInputStep);\namountInput.addEventListener('input', onMakeInputAmount);\n\nlet delays = 0;\nfunction onMakeInputDelay(e) {\n  delays = Number(e.currentTarget.value);\n  return delays;\n}\n\nlet step = 0;\nfunction onMakeInputStep(e) {\n  step = Number(e.currentTarget.value);\n  return step;\n}\n\nlet amount = 0;\nfunction onMakeInputAmount(e) {\n  amount = e.currentTarget.value;\n  return amount;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    res({ position, delay })\n  } else {\n    rej({ position, delay })\n  }\n    }, delays += step);\n  })\n}\n\nfunction onMakeSubmit(e) {\n  e.preventDefault();\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delays)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","preventDefault","i","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$delays","then","param","position","delay","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","currentTarget","value","$ce04d3a99e08e73b$var$step","Promise","res","rej","setTimeout","Math","random"],"version":3,"file":"03-promises.5e984f15.js.map"}